---
- name: Verify
  hosts: all
  vars:
    filebeat_setup_kibana: true
    filebeat_version: "7.14.0"
  gather_facts: true
  tasks:

    # - name: debug dacts
    #   debug: msg="{{ ansible_facts }}"

    ### Развернёт 2/3 ELK стека и настроит дешборды в Кибане
    - name: get elastic
      include_role:
        name: "elastic-role"
    - name: get kibana
      include_role:
        name: "kibana-role"

    ### Проверка, что веб функционирует корректно. 
    ### Могут быть редиректы, считаем что это ок.
    - name: Wait for port 9200 to become open on the host, don't start checking for 10 seconds
      wait_for:
        host: "{{ ansible_facts.default_ipv4.address }}"
        port: 9200
        delay: 10

    - name: test elastic web
      uri:
        url: "http://{{ ansible_nodename }}:9200/_cat/indices?v"
        status_code: 
          - 200
          - 302
        follow_redirects: safe
        return_content: yes
      register: curl_elastic

    - name: Wait for port 5601 to become open on the host, don't start checking for 10 seconds
      wait_for:
        host: "{{ ansible_facts.default_ipv4.address }}"
        port: 5601
        delay: 10

    - name: test kibana web
      uri:
        url: "http://{{ ansible_nodename }}:5601/app/home"
        status_code:
          - 200
          - 302
        follow_redirects: safe
        return_content: yes
      register: curl_kibana
      until: curl_kibana.status in [200,302]
      retries: 10
      delay: 60
    
    ## Теперь можно ещё раз запустить роль filebeat
    ## Чтобы настроить дешборды в Кибане
    - name: apply filebeat-role to setup kibana dashboards
      include_role:
        name: "filebeat-role"

    ### Проверит, что процесс Файлбит запущен и выведет ID
    - name: check filebeat is running
      block:
      - name: check filebeat is running on Docker
        shell:
          cmd: docker exec {{ ansible_nodename }} pgrep filebeat
        changed_when: false
        delegate_to: 127.0.0.1
        register: filebeat_running
      rescue:
      - name: check filebeat is running on Podman
        shell:
          cmd: podman exec {{ ansible_nodename }} pgrep filebeat
        changed_when: false
        delegate_to: 127.0.0.1
        register: filebeat_running

    - name: print what docker exec returned 
      debug: msg="filebeat process id = {{ filebeat_running.stdout }}"

    ### Проверка, что в Эластике есть индекс сданными от Файлбита
    - name: check filebeat index exists
      uri:
        url: "http://{{ ansible_nodename }}:9200/_cat/indices/filebeat-{{ filebeat_version }}-*?format=json"
        method: GET
        return_content: yes
        status_code: 200
      register: elastic_filebeat_index

    ### Покажет количество документов (=данных) в индексе или упадёт, если их нет.
    - name: checkif index not empty
      debug: msg="number of documents in filebeat index = {{ elastic_filebeat_index.json[0]['docs.count'] }}"
      failed_when: elastic_filebeat_index.json[0]['docs.count'] == "0"